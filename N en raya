package main_n_en_raya;

public class Main_N_En_Raya {

    public static void main(String[] args) {
        Juego juego1= new Juego();
        
        juego1.jugar();
    }

public class Juego {
    private Jugadores [] jugadores;
    private Jugadores [] fichas;
    public static boolean terminado;
    Scanner leer= new Scanner(System.in);

    public Juego() {
        this.jugadores = new Jugadores[2];
        this.fichas = new Jugadores[2];
        terminado = false;
        crearJugadores();
        seleccionarPrimerJugador();
        Tablero.crearTablero();
        Tablero tab= new Tablero();
    }
    
    public void inicializarJuego() {
        this.jugadores = new Jugadores[2];
        this.terminado = false;
        crearJugadores();
        seleccionarPrimerJugador();
        Tablero tab= new Tablero();
        Tablero.crearTablero();
    }
    
    public void jugar() {
        while(!terminado) {
            Tablero.colocarFicha();
            Tablero.mostrarTablero();
            boolean verificarFinalizacion = Tablero.verificarFinalizacion(terminado, terminado, terminado, terminado, terminado);
            cambiarTurno();
        } 
    }
    
    public void cambiarTurno() {
        //cambiar la ficha que este jugando 
        String jugadorActual;
        for (int i=0; i<jugadores.length; i++) {
            if(jugadores[i].isTurno()==true) {
                jugadores[i].setTurno(false);
                
            } else {
                jugadores[i].setTurno(true);
                
                
            }
            
        }
        
        
    }
    
    public static String seleccionarPrimerJugador() {
        //selecciona el que juega primero
        Scanner leer= new Scanner(System.in);
        boolean nombreValido=false;
        String nombreJugadorActual= null;
        String nombreJugador1= null;
        String nombreJugador2= null;
        
        while (!nombreValido) {
            System.out.println("Quién quiere empezar el juego");
            nombreJugadorActual= leer.nextLine();
        
            if (nombreJugadorActual.equals(nombreJugador1) || nombreJugadorActual.equals(nombreJugador2)) {
                System.out.println("¡A JUGAR!");
                nombreValido= true;
                
            } else {
                System.out.println("El nombre es incorrecto, intentalo de nuevo");
                
            }
    
        }
        
        return nombreJugadorActual;    
            
        
    }
    
    public void crearJugadores() {
        //preguntar el nombre y la ficha con la que va a jugar
        
        for(int i=0; i<jugadores.length; i++) {
                System.out.println("¿Cómo te llamas?");
                String nombre= leer.next();
                jugadores[i]= new Jugadores(nombre);
            
                System.out.println("¿Con qué ficha quieres jugar?");
                char ficha= leer.next().charAt(0);       
                jugadores[i].setFicha(ficha);
        }
  
    }

    
}

public class Jugadores {
    private char ficha;
    private String nombre;
    private boolean turno;
    
    public Jugadores(char ficha, String nombre, boolean turno) {
        this.ficha= ficha;
        this.nombre= nombre;
        this.turno= turno;
    }

    public char getFicha() {
        return ficha;
    }

    public void setFicha(char ficha) {
        this.ficha = ficha;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public boolean isTurno() {
        return turno;
    }

    public void setTurno(boolean turno) {
        this.turno = turno;
    } 
    
}

public class Tablero {
    private static char[][] tablero;
    private int fichasColocadas;
    char jugador= Jugadores.getFicha();

    public Tablero(char[][] arrayTablero, int fichasColocadas) { 
        tablero = arrayTablero;
        this.fichasColocadas = fichasColocadas;
    }
    
    public static void colocarFicha() {
        Scanner leer = new Scanner(System.in);
        boolean valido=false;

        while (!valido) {
            System.out.println("Jugador " + Jugadores.getNombre() + " ¿Cuál es tu jugada? (fila y columna separados por un espacio)");
            int fila = leer.nextInt();
            int columna = leer.nextInt();
            
            if (fila>=0 && fila<tablero.length && columna>=0 && columna<tablero.length && tablero [fila][columna] != 'X' && tablero [fila][columna] != 'O') { //Se comprueba si el movimiento es válido
                tablero [fila][columna] = Jugadores.getFicha();
                valido =true;
                
            } else {
                System.out.println("Ese movimiento no es válido. Intentalo de nuevo");
                
            }
        }
    }
    
    public static boolean verificarFinalizacion(boolean filaEntera, boolean columnaEntera, boolean diag1Entera, boolean diag2Entera, boolean empate) {
        if (filaEntera || columnaEntera || diag1Entera || diag2Entera || empate) {
            Juego.terminado=true;
        } else {
            Juego.terminado=false;
        }
        
        return Juego.terminado;
    }

    private boolean comprobarFilas() {
        boolean filaEntera=true;
        
        for(int i=0; i<tablero.length; i++) {
            for(int j=0; j<tablero.length; j++) {
                if (tablero[i][j] != jugador) {
                    filaEntera= false;
                }
            }
        }
        return filaEntera;
    }
    
    private boolean comprobarColumnas() {
        boolean columnaEntera= true;
        
        for(int i=0; i<tablero.length; i++) {
            for(int j=0; j<tablero.length; j++) {
                if (tablero[i][j] != jugador) {
                    columnaEntera= false;
                }
            }
        }
        return columnaEntera;
    }
    
    private boolean comprobarDiagonalPrincipal() {
        boolean diag1Entera= true;
       
        for(int i=0; i<tablero.length; i++) {   
            if (Tablero.tablero[i][i] != jugador) {   // DIAGONAL 1 (de izq a drch)
                diag1Entera= false;
            }
        }
        return diag1Entera;
    }
    
    private boolean comprobarDiagonalInversa() {
        boolean diag2Entera= true;
        
        for(int i=0; i<tablero.length; i++) {   
            if (tablero[i][tablero.length-i -1] != jugador) {   //DIAGONAL 2 (de drch a izq)
                diag2Entera= false;
            }
        }
        return diag2Entera;
    }
    
    private boolean comprobarEmpate() {
        boolean empate;
        for (int i=0; i<tablero.length; i++) {
            for (int j=0; j<tablero.length; j++) {
                if (tablero [i][j] != 'X' && tablero[i][j] != 'O') {
                    return empate= false;
                }
            }
        }
        return empate= true;
     }
    
    public static int crearTablero() {
        int longitud;
        Scanner leer= new Scanner(System.in);
        
        System.out.println("De cuantas casillas quieres que sea el tablero");
        longitud= leer.nextInt();
        
        return longitud;
        
    }

    public static void mostrarTablero() {
        System.out.print("  ");
        for (int i=0; i<tablero.length; i++) {
            System.out.print(i+" ");
        }
        System.out.println();
        
        for (int i=0; i < tablero.length; i++) {
            System.out.print(i + " ");
            for (int j=0; j < tablero.length; j++) {
                //tablero[i][j]= ' ';
                System.out.print(" "+tablero[i][j]); //se imprime la posicion del tablero que corresponde a la i y la j
                if (j < tablero.length) {
                    System.out.print("|");
                }
            }
            System.out.println();
            if (i < tablero.length-1) {     //Espacio entre filas
                //System.out.println();
            }
        }
        System.out.println();
        
    }
    
    Tablero() {
        
    }
